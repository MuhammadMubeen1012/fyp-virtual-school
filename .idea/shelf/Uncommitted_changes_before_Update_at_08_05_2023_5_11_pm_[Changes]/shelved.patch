Index: frontend/pages/dashboard-teacher/courses/[course]/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useState} from 'react';\r\nimport LayoutTeacher from \"../../../../components/Dashboard/Layout/LayoutTeacher\";\r\nimport Link from \"next/link\";\r\nimport {Router, useRouter} from \"next/router\";\r\nimport { getLessons} from \"./CourseController\";\r\n\r\nconst Index = () => {\r\n    const [course, setCourse] = useState([]);\r\n    const [lessons, setLessons] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const router = useRouter();\r\n    console.log(router.query);\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(router.query );\r\n        setCourse(router.query.course);\r\n        getLessons(router.query.course).then(r => setLessons(r));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (loading === false && lessons.length !== 0) {\r\n            console.log(lessons);\r\n            console.log(course);\r\n            setLoading(true);\r\n        }\r\n    }, [lessons]);\r\n\r\n\r\n    return (\r\n        <LayoutTeacher>\r\n            {/*=============== Start of main ================= */}\r\n            <main>\r\n                <h1>Overview</h1>\r\n                {/* ============= Start of Courses ================= */}\r\n                <div className=\"courses-table\">\r\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        <h2>Courses</h2>\r\n                        <div>\r\n                            <button>Create</button>\r\n                            <button>Edit</button>\r\n                        </div>\r\n                    </div>\r\n                    <table>\r\n                        <thead>\r\n\r\n                        <tr>\r\n                            <th>Unit No.</th>\r\n                            <th>Unit Name</th>\r\n                            <th>Details</th>\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {\r\n                            loading && lessons !== null ? (\r\n                                lessons.data.lessons.map((lesson, index) => (\r\n                                    <tr>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{lesson.name}</td>\r\n                                        <td>link</td>\r\n                                    </tr>)\r\n                                )\r\n                            ) : \"\"\r\n                        }\r\n                        <tr>\r\n                            <th>01</th>\r\n                            <td>Introduction</td>\r\n                            <Link href={\"/dashboard-teacher/courses/english/unit-01\"}\r\n                                  className=\"primary \">Details</Link>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>02</th>\r\n                            <td>Vocabulary</td>\r\n                            <td className=\"primary\">Details</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>03</th>\r\n                            <td>Grammar</td>\r\n                            <td className=\"primary\">Details</td>\r\n                        </tr>\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                {/* ============= End of Courses  ================== */}\r\n\r\n            </main>\r\n            {/*=============== End Of Main  ==================*/}\r\n\r\n\r\n        </LayoutTeacher>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pages/dashboard-teacher/courses/[course]/index.js b/frontend/pages/dashboard-teacher/courses/[course]/index.js
--- a/frontend/pages/dashboard-teacher/courses/[course]/index.js	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/frontend/pages/dashboard-teacher/courses/[course]/index.js	(date 1683511860683)
@@ -2,7 +2,7 @@
 import LayoutTeacher from "../../../../components/Dashboard/Layout/LayoutTeacher";
 import Link from "next/link";
 import {Router, useRouter} from "next/router";
-import { getLessons} from "./CourseController";
+import {getLessons} from "./CourseController";
 
 const Index = () => {
     const [course, setCourse] = useState([]);
@@ -56,30 +56,14 @@
                             loading && lessons !== null ? (
                                 lessons.data.lessons.map((lesson, index) => (
                                     <tr>
-                                        <td>{index+1}</td>
+                                        <td>{index + 1}</td>
                                         <td>{lesson.name}</td>
-                                        <td>link</td>
+                                        <td><Link href={`/dashboard-teacher/courses/${course}/${lesson._id}`}
+                                                  className="primary ">Details</Link></td>
                                     </tr>)
                                 )
                             ) : ""
                         }
-                        <tr>
-                            <th>01</th>
-                            <td>Introduction</td>
-                            <Link href={"/dashboard-teacher/courses/english/unit-01"}
-                                  className="primary ">Details</Link>
-                        </tr>
-                        <tr>
-                            <th>02</th>
-                            <td>Vocabulary</td>
-                            <td className="primary">Details</td>
-                        </tr>
-                        <tr>
-                            <th>03</th>
-                            <td>Grammar</td>
-                            <td className="primary">Details</td>
-                        </tr>
-
 
                         </tbody>
                     </table>
Index: frontend/pages/dashboard-teacher/courses/[course]/CourseController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\n// const getCourse = async (id) => {\r\n//     const response = await axios.get(`http://localhost:7000/api/v1/course/${id}`, {\r\n//         headers: {\r\n//             Authorization: `${Cookies.get('token')}`\r\n//         }\r\n//     })\r\n//     console.log(response.data.course)\r\n//     return response.data.course\r\n// }\r\n\r\n const getLessons = async (id) => {\r\n    return await(axios.get(`http://localhost:7000/api/v1/lesson/${id}`,\r\n        {\r\n            headers: {\r\n                Authorization: `${Cookies.get('token')}`\r\n            }\r\n\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport {getLessons};\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js b/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js
--- a/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js	(date 1683511860699)
@@ -12,18 +12,41 @@
 //     return response.data.course
 // }
 
- const getLessons = async (id) => {
-    return await(axios.get(`http://localhost:7000/api/v1/lesson/${id}`,
-        {
-            headers: {
-                Authorization: `${Cookies.get('token')}`
-            }
+const getLessons = async (id) => {
+    return await (axios.get(`http://localhost:7000/api/v1/lesson/${id}`,
+            {
+                headers: {
+                    Authorization: `${Cookies.get('token')}`
+                }
 
-        })
+            })
     )
 }
+const getLesson = async (lesson_id) => {
+    return await (axios.get(`http://localhost:7000/api/v1/course/lesson/${lesson_id}`,
+            {
+                headers: {
+                    Authorization: `${Cookies.get('token')}`
+                }
+
+            })
+    )
+}
 
+const getContent = async (lessonID) => {
+    const response = await axios.get(
+        `http://localhost:7000/api/v1/lesson/content/${lessonID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
 
-export {getLessons};
+    return response.data.content;
+};
+
+
+export {getLessons, getLesson, getContent};
 
 
Index: frontend/pages/dashboard-teacher/courses/[course]/[slug].js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState} from 'react';\r\nimport Link from \"next/link\";\r\nimport {Button, Card, Dropdown, Form, Modal, Nav} from \"react-bootstrap\";\r\nimport LayoutTeacher from \"../../../../components/Dashboard/Layout/LayoutTeacher\";\r\n\r\n\r\nconst Slug = () => {\r\n    const [modal, setModal] = useState({\r\n        item: 0,\r\n        active: false,\r\n    });\r\n    const [eventKey, setEventKey] = useState(0);\r\n    const [isModalAddQuestion, setIsModalAddQuestion] = useState(false);\r\n\r\n    return (\r\n        <LayoutTeacher>\r\n            {/*=============== Start of Main ================= */}\r\n\r\n            <main>\r\n\r\n                <h1>Overview</h1>\r\n\r\n                <div className=\"\" style={{ paddingBlock: \"1rem\" ,display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <div>\r\n                        <span>Unit 1</span>\r\n                        <h3>Speaking to the world</h3>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button className={\"btn btn-primary\"}>Next Lesson </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                    paddingBlock: \"1rem\",\r\n                    border: \"1px solid red\",\r\n                }}>\r\n                    vector image...\r\n                </div>\r\n                <br/>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                        Create\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => setModal({item: 1, active: true})}>Content</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 2, active: true})}>Events</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 3, active: true})}>Assignment</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 4, active: true})}>Quiz</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n\r\n\r\n                {/*Setting Modals according to the create event*/}\r\n                <div className={\"\"} >\r\n                    <Modal\r\n                        show={modal.active}\r\n                        onHide={() => setModal({item: 0, active: false})}\r\n                        dialogClassName=\"custom-modal\"\r\n                        size={\"lg\"}\r\n                        aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        centered\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                                {\r\n                                    modal.item === 1 ?\r\n                                        <div>\r\n                                            Add Content\r\n                                        </div> :\r\n                                        modal.item === 2 ?\r\n                                            <div>\r\n                                                Add Event\r\n                                            </div> :\r\n                                            modal.item === 3 ?\r\n                                                <div>\r\n                                                    Add Assignment\r\n                                                </div> :\r\n                                                modal.item === 4 ?\r\n                                                    <div>\r\n                                                        Add Quiz\r\n                                                    </div> : \"\"\r\n                                }\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            {\r\n                                modal.item === 1 ?\r\n                                    <div>\r\n                                        {/* lesson Video Link */}\r\n                                        <Form>\r\n\r\n                                            <Form.Group controlId={\"\"} >\r\n                                                <Form.Label>File Link</Form.Label>\r\n                                                <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"File Link\"} />\r\n                                            </Form.Group>\r\n\r\n                                            <br/>\r\n                                            <Modal.Footer>\r\n                                                <Button>Submit</Button>\r\n                                            </Modal.Footer>\r\n\r\n\r\n                                        </Form>\r\n                                    </div>\r\n                                    :\r\n                                    modal.item === 2 ?\r\n                                        <div>\r\n                                            {/* Event Modal */}\r\n                                            <Form>\r\n                                                <Form.Group controlId={\"name\"} >\r\n                                                    <Form.Label>Title</Form.Label>\r\n                                                    <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Title\"} />\r\n                                                </Form.Group>\r\n                                                <br/>\r\n\r\n                                                <Form.Group controlId={\"name\"} >\r\n                                                    <Form.Label>Description</Form.Label>\r\n                                                    <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Description\"} />\r\n                                                </Form.Group> <br/>\r\n\r\n                                                <Form.Group controlId={\"name\"} >\r\n                                                    <Form.Label>Date</Form.Label>\r\n                                                    <Form.Control type={\"date\"} className={\"m-2\"} placeholder={\"Date\"} />\r\n                                                </Form.Group> <br/>\r\n\r\n                                                <Form.Group controlId={\"name\"} >\r\n\r\n                                                    <div style={{display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                                        <div>\r\n                                                            <label htmlFor=\"\">Hours</label><br/>\r\n                                                            <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                                                        </div>\r\n\r\n                                                        <div>\r\n                                                            <label htmlFor=\"\">Minutes</label><br/>\r\n                                                            <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                                                        </div>\r\n\r\n                                                        <div>\r\n                                                            <label htmlFor=\"\">Seconds</label><br/>\r\n                                                            <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </Form.Group> <br/>\r\n\r\n\r\n                                                <Form.Group controlId={\"name\"} >\r\n                                                    <Form.Label>Event Link</Form.Label>\r\n                                                    <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Link\"} />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId={\"name\"} >\r\n                                                    <Form.Label>Event Password</Form.Label>\r\n                                                    <Form.Control type={\"password\"} className={\"m-2\"} placeholder={\"Event Password\"} />\r\n                                                </Form.Group> <br/>\r\n\r\n\r\n                                                <br/>\r\n                                                <Modal.Footer>\r\n                                                    <Button type={\"submit\"}>Submit</Button>\r\n                                                </Modal.Footer>\r\n\r\n                                            </Form>\r\n                                        </div>\r\n                                        :\r\n                                        modal.item === 3 ?\r\n                                            <div className=\"\">\r\n                                                {/* Assignments Modal */}\r\n                                                <Form>\r\n                                                    <Form.Group controlId={\"Title\"} >\r\n                                                        <Form.Label>Title</Form.Label>\r\n                                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Title\"} />\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n\r\n                                                    <Form.Group controlId={\"Title\"} >\r\n                                                        <Form.Label>Description</Form.Label>\r\n                                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Description\"} />\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n\r\n                                                    <Form.Group controlId={\"file\"} >\r\n                                                        <Form.Label>File Name</Form.Label>\r\n                                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"File Name\"} />\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n\r\n                                                    <Form.Group controlId={\"file\"} >\r\n                                                        <Form.Label>File</Form.Label>\r\n                                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Add File Link\"} />\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n\r\n                                                    <Form.Group controlId={\"name\"} >\r\n                                                        <Form.Label>Deadline</Form.Label>\r\n                                                        <Form.Control type={\"date\"} className={\"m-2\"} placeholder={\"Date\"} />\r\n                                                    </Form.Group> <br/>\r\n\r\n                                                    <Form.Group controlId={\"file\"} >\r\n                                                        <Form.Label>Marks</Form.Label>\r\n                                                        <Form.Control type={\"number\"} className={\"m-2\"} placeholder={\"Marks\"} />\r\n                                                    </Form.Group>\r\n                                                    <br/>\r\n\r\n                                                    <br/>\r\n                                                    <Modal.Footer>\r\n                                                        <Button type={\"submit\"}>Submit</Button>\r\n                                                    </Modal.Footer>\r\n\r\n                                                </Form>\r\n                                            </div>\r\n                                            :\r\n                                            modal.item === 4 ?\r\n                                                <div className=\"\">\r\n                                                    {/*  Quiz Modal  */}\r\n                                                    <Form>\r\n                                                        <Form.Group controlId={\"question\"} >\r\n                                                            <Form.Label>Name</Form.Label>\r\n                                                            <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Name\"} />\r\n                                                        </Form.Group>\r\n                                                        <br/>\r\n\r\n                                                        <Form.Group controlId={\"question\"} >\r\n                                                            <Form.Label>Description</Form.Label>\r\n                                                            <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Description\"} />\r\n                                                        </Form.Group>\r\n                                                        <br/>\r\n\r\n                                                        <Form.Group controlId={\"name\"} >\r\n                                                            <label>Start Time</label><br/>\r\n                                                            <div style={{display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n                                                                <div>\r\n\r\n                                                                    <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                                                                </div>\r\n\r\n                                                                <div>\r\n                                                                    <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                                                                </div>\r\n\r\n                                                                <div>\r\n\r\n                                                                    <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </Form.Group> <br/>\r\n\r\n\r\n                                                        <Form.Group controlId={\"name\"} >\r\n                                                            <label>End Time</label>\r\n                                                            <div style={{display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                                                <div>\r\n                                                                    <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                                                                </div>\r\n\r\n                                                                <div>\r\n                                                                    <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                                                                </div>\r\n\r\n                                                                <div>\r\n                                                                    <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </Form.Group> <br/>\r\n\r\n                                                        <div>\r\n                                                            <input type=\"checkbox\" id=\"isLive\" />\r\n                                                            <label htmlFor=\"isLive\"> isLive</label>\r\n                                                        </div>\r\n\r\n                                                        <br/>\r\n                                                        <Modal.Footer>\r\n                                                            <Button type={\"submit\"}>Submit</Button>\r\n                                                        </Modal.Footer>\r\n\r\n                                                    </Form>\r\n\r\n\r\n                                                </div>\r\n                                                : \"\"\r\n                            }\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n\r\n\r\n                {/* ============= Tabs for lesson, Live Video, Assignments, Exercises, Quizes, Other Section ================= */}\r\n                <Nav className={\"mt-5 mb-5\"} fill variant=\"tabs\" defaultActiveKey=\"#\">\r\n                    <Nav.Item>\r\n                        <Nav.Link  href=\"#\" onClick={() => setEventKey(0)}>Content</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-1\" onClick={() => setEventKey(1)}>Events</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-2\" onClick={() => setEventKey(2)}>Assignments</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-4\" onClick={() => setEventKey(3)} >Quizes</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n\r\n\r\n\r\n                {/* ============= Tabs running by conditional rendering ================= */}\r\n                <div className=\"\">\r\n                    {\r\n                        eventKey === 0 ?\r\n                            <div>\r\n                                {/*Lesson Tab*/}\r\n                                <Card>\r\n                                    <Card.Header>Content</Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            File Link\r\n                                        </Card.Text>\r\n                                        <div>\r\n                                            <Button variant=\"primary\">Edit</Button>\r\n                                            <Button className={\"m-1\"} variant=\"primary\">Delete</Button>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card> <br/>\r\n\r\n\r\n                            </div> :\r\n                            eventKey === 1 ?\r\n                                <div>\r\n                                    {/*Event Tab*/}\r\n                                    <Card>\r\n                                        <Card.Header>Event Title</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Card.Title>Description</Card.Title>\r\n                                            <Card.Text>\r\n                                                Event Date\r\n                                            </Card.Text>\r\n                                            <Button variant=\"primary\">Go to Event</Button>\r\n                                        </Card.Body>\r\n                                    </Card> <br/>\r\n\r\n                                    <Card>\r\n                                        <Card.Header>Event Title</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Card.Title>Description</Card.Title>\r\n                                            <Card.Text>\r\n                                                Event Date\r\n                                            </Card.Text>\r\n                                            <Button variant=\"primary\">Go to Event</Button>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n\r\n                                </div> :\r\n                                eventKey === 2 ?\r\n                                    <div>\r\n                                        {/*Assignments Tab*/}\r\n                                        <Card>\r\n                                            <Card.Header>Assignment Title</Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Title>Description</Card.Title>\r\n                                                <Card.Text>\r\n                                                    File Link\r\n                                                </Card.Text>\r\n                                                <Button variant=\"primary\">Go to Event</Button>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                        <br/>\r\n\r\n                                    </div> :\r\n                                    eventKey === 3 ?\r\n                                        <div>\r\n                                            {/*Quiz Tab*/}\r\n                                            <Card>\r\n                                                <Card.Header>Quiz Title</Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Card.Title>Description</Card.Title>\r\n                                                    <Button variant=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                setIsModalAddQuestion(true);\r\n                                                            }}\r\n                                                    >Add Questions</Button>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            <br/>\r\n\r\n                                        </div> : \"\"\r\n                    }\r\n\r\n\r\n                    {\r\n                        isModalAddQuestion\r\n                        &&\r\n                        <Modal\r\n                            show={isModalAddQuestion}\r\n                            onHide={() => setIsModalAddQuestion(false)}\r\n                            dialogClassName=\"custom-modal\"\r\n                            size={\"lg\"}\r\n                            aria-labelledby=\"example-custom-modal-styling-title\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                                    Add Quiz\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form handleSubmit={(e) => {e.preventDefault()}}>\r\n\r\n                                    <Form.Group controlId={\"question\"} >\r\n                                        <Form.Label>Question</Form.Label>\r\n                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Type Question here...\"} />\r\n                                    </Form.Group>\r\n                                    <br/>\r\n\r\n                                    <Form.Label>Options</Form.Label>\r\n                                    <Form.Group controlId={\"question\"} >\r\n                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Option 1\"} />\r\n                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Option 2\"} />\r\n                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Option 3\"} />\r\n                                        <Form.Control type={\"text\"} className={\"m-2\"} placeholder={\"Option 4\"} />\r\n                                    </Form.Group>\r\n\r\n                                    <br/>\r\n                                    <Form.Group controlId={\"question\"} >\r\n                                        <Form.Label>Marks</Form.Label>\r\n                                        <Form.Control type={\"number\"} className={\"m-2\"} placeholder={\"Marks\"} />\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                        <Button type={\"submit\"}>Submit</Button>\r\n                                        <Button>Next</Button>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </Form>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n                {/* =============      Tabs for lesson       ================== */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </main>\r\n\r\n            {/*=============== End Of Main  ==================*/}\r\n\r\n            {/*============= start of Right side*/}\r\n            <div className=\"right\">\r\n\r\n                <div className=\"profile\">\r\n                    <div className=\"info\">\r\n                        <p>Hey, <b>Teacher</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"profile-photo\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/*====================== Start of Recent Updates ==================== */}\r\n                <div className=\"recent-updates\">\r\n                    <h2>Notice Board</h2>\r\n                    <div className=\"updates\">\r\n\r\n\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- UX</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>\r\n                                    Assignment due 20 March\r\n                                </p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- SEO</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>\r\n                                    Assignment due 21 March\r\n                                </p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- SE</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>\r\n                                    Assignment due 25 March\r\n                                </p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                {/*====================== End of Recent Updates ====================== */}\r\n\r\n\r\n\r\n            </div>\r\n            {/*============= End of left Side*/}\r\n\r\n\r\n\r\n        </LayoutTeacher>\r\n    );\r\n};\r\n\r\nexport default Slug;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pages/dashboard-teacher/courses/[course]/[slug].js b/frontend/pages/dashboard-teacher/courses/[course]/[slug].js
--- a/frontend/pages/dashboard-teacher/courses/[course]/[slug].js	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/frontend/pages/dashboard-teacher/courses/[course]/[slug].js	(date 1683516617732)
@@ -1,7 +1,8 @@
 import React, {useState} from 'react';
-import Link from "next/link";
 import {Button, Card, Dropdown, Form, Modal, Nav} from "react-bootstrap";
 import LayoutTeacher from "../../../../components/Dashboard/Layout/LayoutTeacher";
+import {useRouter} from "next/router";
+import {getLesson} from "./CourseController";
 
 
 const Slug = () => {
@@ -12,6 +13,48 @@
     const [eventKey, setEventKey] = useState(0);
     const [isModalAddQuestion, setIsModalAddQuestion] = useState(false);
 
+    const [lessonLink, setLessonLink] = useState("");
+    const [lesson, setLesson] = useState({}); // lesson data
+    const [lessonLoading, setLessonLoading] = useState(false);
+
+    const [contentLink, setContentLink] = useState([]);
+    const [content, setContent] = useState([]);
+    const [contentLoading, setContentLoading] = useState(false);
+
+    const [eventsLink, setEventsLink] = useState([]);
+    const [events, setEvents] = useState([]);
+    const [eventsLoading, setEventsLoading] = useState(false);
+
+    const [quizesLink, setQuizesLink] = useState([]);
+    const [quizes, setQuizes] = useState([]);
+    const [quizesLoading, setQuizesLoading] = useState(false);
+
+    const router = useRouter();
+    useState(() => {
+        const lesson_id = router.query['slug'];
+        console.log(lesson_id);
+        setLessonLink(lesson_id);
+
+
+        if (lesson_id !== undefined) {
+            getLesson(lesson_id).then(r => {
+                console.log(r.data.lesson);
+                setContentLink(r.data.content)
+                setEventsLink(r.data.events)
+                setQuizesLink(r.data.quizes)
+                setLesson(r.data.lesson)
+
+            }).catch(e => console.log(e));
+        }
+    }, []);
+
+    useState(() => {
+        if (lesson !== undefined && lessonLink !== undefined && lessonLoading === false) {
+            console.log(lesson);
+            setLessonLoading(true);
+        }
+    }, [lesson]);
+
     return (
         <LayoutTeacher>
             {/*=============== Start of Main ================= */}
@@ -20,14 +63,14 @@
 
                 <h1>Overview</h1>
 
-                <div className="" style={{ paddingBlock: "1rem" ,display: "flex", justifyContent: "space-between"}}>
+                <div className="" style={{paddingBlock: "1rem", display: "flex", justifyContent: "space-between"}}>
                     <div>
-                        <span>Unit 1</span>
-                        <h3>Speaking to the world</h3>
+                        <span>{lessonLoading ? lesson.name : ""}</span>
+                        <h3>{lessonLoading ? lesson.description : ""}</h3>
                     </div>
 
                     <div>
-                        <button className={"btn btn-primary"}>Next Lesson </button>
+                        <button className={"btn btn-primary"}>Next Lesson</button>
                     </div>
                 </div>
 
@@ -52,9 +95,8 @@
                 </Dropdown>
 
 
-
                 {/*Setting Modals according to the create event*/}
-                <div className={""} >
+                <div className={""}>
                     <Modal
                         show={modal.active}
                         onHide={() => setModal({item: 0, active: false})}
@@ -93,9 +135,10 @@
                                         {/* lesson Video Link */}
                                         <Form>
 
-                                            <Form.Group controlId={""} >
+                                            <Form.Group controlId={""}>
                                                 <Form.Label>File Link</Form.Label>
-                                                <Form.Control type={"text"} className={"m-2"} placeholder={"File Link"} />
+                                                <Form.Control type={"text"} className={"m-2"}
+                                                              placeholder={"File Link"}/>
                                             </Form.Group>
 
                                             <br/>
@@ -111,25 +154,27 @@
                                         <div>
                                             {/* Event Modal */}
                                             <Form>
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
                                                     <Form.Label>Title</Form.Label>
-                                                    <Form.Control type={"text"} className={"m-2"} placeholder={"Title"} />
+                                                    <Form.Control type={"text"} className={"m-2"}
+                                                                  placeholder={"Title"}/>
                                                 </Form.Group>
                                                 <br/>
 
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
                                                     <Form.Label>Description</Form.Label>
-                                                    <Form.Control type={"text"} className={"m-2"} placeholder={"Description"} />
+                                                    <Form.Control type={"text"} className={"m-2"}
+                                                                  placeholder={"Description"}/>
                                                 </Form.Group> <br/>
 
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
                                                     <Form.Label>Date</Form.Label>
-                                                    <Form.Control type={"date"} className={"m-2"} placeholder={"Date"} />
+                                                    <Form.Control type={"date"} className={"m-2"} placeholder={"Date"}/>
                                                 </Form.Group> <br/>
 
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
 
-                                                    <div style={{display: "flex", justifyContent: "space-between" }}>
+                                                    <div style={{display: "flex", justifyContent: "space-between"}}>
                                                         <div>
                                                             <label htmlFor="">Hours</label><br/>
                                                             <Form.Control placeholder={"Hours"} type="text"/>
@@ -149,14 +194,15 @@
                                                 </Form.Group> <br/>
 
 
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
                                                     <Form.Label>Event Link</Form.Label>
-                                                    <Form.Control type={"text"} className={"m-2"} placeholder={"Link"} />
+                                                    <Form.Control type={"text"} className={"m-2"} placeholder={"Link"}/>
                                                 </Form.Group>
 
-                                                <Form.Group controlId={"name"} >
+                                                <Form.Group controlId={"name"}>
                                                     <Form.Label>Event Password</Form.Label>
-                                                    <Form.Control type={"password"} className={"m-2"} placeholder={"Event Password"} />
+                                                    <Form.Control type={"password"} className={"m-2"}
+                                                                  placeholder={"Event Password"}/>
                                                 </Form.Group> <br/>
 
 
@@ -172,38 +218,44 @@
                                             <div className="">
                                                 {/* Assignments Modal */}
                                                 <Form>
-                                                    <Form.Group controlId={"Title"} >
+                                                    <Form.Group controlId={"Title"}>
                                                         <Form.Label>Title</Form.Label>
-                                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Title"} />
+                                                        <Form.Control type={"text"} className={"m-2"}
+                                                                      placeholder={"Title"}/>
                                                     </Form.Group>
                                                     <br/>
 
-                                                    <Form.Group controlId={"Title"} >
+                                                    <Form.Group controlId={"Title"}>
                                                         <Form.Label>Description</Form.Label>
-                                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Description"} />
+                                                        <Form.Control type={"text"} className={"m-2"}
+                                                                      placeholder={"Description"}/>
                                                     </Form.Group>
                                                     <br/>
 
-                                                    <Form.Group controlId={"file"} >
+                                                    <Form.Group controlId={"file"}>
                                                         <Form.Label>File Name</Form.Label>
-                                                        <Form.Control type={"text"} className={"m-2"} placeholder={"File Name"} />
+                                                        <Form.Control type={"text"} className={"m-2"}
+                                                                      placeholder={"File Name"}/>
                                                     </Form.Group>
                                                     <br/>
 
-                                                    <Form.Group controlId={"file"} >
+                                                    <Form.Group controlId={"file"}>
                                                         <Form.Label>File</Form.Label>
-                                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Add File Link"} />
+                                                        <Form.Control type={"text"} className={"m-2"}
+                                                                      placeholder={"Add File Link"}/>
                                                     </Form.Group>
                                                     <br/>
 
-                                                    <Form.Group controlId={"name"} >
+                                                    <Form.Group controlId={"name"}>
                                                         <Form.Label>Deadline</Form.Label>
-                                                        <Form.Control type={"date"} className={"m-2"} placeholder={"Date"} />
+                                                        <Form.Control type={"date"} className={"m-2"}
+                                                                      placeholder={"Date"}/>
                                                     </Form.Group> <br/>
 
-                                                    <Form.Group controlId={"file"} >
+                                                    <Form.Group controlId={"file"}>
                                                         <Form.Label>Marks</Form.Label>
-                                                        <Form.Control type={"number"} className={"m-2"} placeholder={"Marks"} />
+                                                        <Form.Control type={"number"} className={"m-2"}
+                                                                      placeholder={"Marks"}/>
                                                     </Form.Group>
                                                     <br/>
 
@@ -219,21 +271,26 @@
                                                 <div className="">
                                                     {/*  Quiz Modal  */}
                                                     <Form>
-                                                        <Form.Group controlId={"question"} >
+                                                        <Form.Group controlId={"question"}>
                                                             <Form.Label>Name</Form.Label>
-                                                            <Form.Control type={"text"} className={"m-2"} placeholder={"Name"} />
+                                                            <Form.Control type={"text"} className={"m-2"}
+                                                                          placeholder={"Name"}/>
                                                         </Form.Group>
                                                         <br/>
 
-                                                        <Form.Group controlId={"question"} >
+                                                        <Form.Group controlId={"question"}>
                                                             <Form.Label>Description</Form.Label>
-                                                            <Form.Control type={"text"} className={"m-2"} placeholder={"Description"} />
+                                                            <Form.Control type={"text"} className={"m-2"}
+                                                                          placeholder={"Description"}/>
                                                         </Form.Group>
                                                         <br/>
 
-                                                        <Form.Group controlId={"name"} >
+                                                        <Form.Group controlId={"name"}>
                                                             <label>Start Time</label><br/>
-                                                            <div style={{display: "flex", justifyContent: "space-between" }}>
+                                                            <div style={{
+                                                                display: "flex",
+                                                                justifyContent: "space-between"
+                                                            }}>
 
                                                                 <div>
 
@@ -253,9 +310,12 @@
                                                         </Form.Group> <br/>
 
 
-                                                        <Form.Group controlId={"name"} >
+                                                        <Form.Group controlId={"name"}>
                                                             <label>End Time</label>
-                                                            <div style={{display: "flex", justifyContent: "space-between" }}>
+                                                            <div style={{
+                                                                display: "flex",
+                                                                justifyContent: "space-between"
+                                                            }}>
                                                                 <div>
                                                                     <Form.Control placeholder={"Hours"} type="text"/>
                                                                 </div>
@@ -272,7 +332,7 @@
                                                         </Form.Group> <br/>
 
                                                         <div>
-                                                            <input type="checkbox" id="isLive" />
+                                                            <input type="checkbox" id="isLive"/>
                                                             <label htmlFor="isLive"> isLive</label>
                                                         </div>
 
@@ -295,7 +355,7 @@
                 {/* ============= Tabs for lesson, Live Video, Assignments, Exercises, Quizes, Other Section ================= */}
                 <Nav className={"mt-5 mb-5"} fill variant="tabs" defaultActiveKey="#">
                     <Nav.Item>
-                        <Nav.Link  href="#" onClick={() => setEventKey(0)}>Content</Nav.Link>
+                        <Nav.Link href="#" onClick={() => setEventKey(0)}>Content</Nav.Link>
                     </Nav.Item>
                     <Nav.Item>
                         <Nav.Link eventKey="link-1" onClick={() => setEventKey(1)}>Events</Nav.Link>
@@ -304,12 +364,11 @@
                         <Nav.Link eventKey="link-2" onClick={() => setEventKey(2)}>Assignments</Nav.Link>
                     </Nav.Item>
                     <Nav.Item>
-                        <Nav.Link eventKey="link-4" onClick={() => setEventKey(3)} >Quizes</Nav.Link>
+                        <Nav.Link eventKey="link-4" onClick={() => setEventKey(3)}>Quizes</Nav.Link>
                     </Nav.Item>
                 </Nav>
 
 
-
                 {/* ============= Tabs running by conditional rendering ================= */}
                 <div className="">
                     {
@@ -410,26 +469,29 @@
                                 </Modal.Title>
                             </Modal.Header>
                             <Modal.Body>
-                                <Form handleSubmit={(e) => {e.preventDefault()}}>
+                                <Form handleSubmit={(e) => {
+                                    e.preventDefault()
+                                }}>
 
-                                    <Form.Group controlId={"question"} >
+                                    <Form.Group controlId={"question"}>
                                         <Form.Label>Question</Form.Label>
-                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Type Question here..."} />
+                                        <Form.Control type={"text"} className={"m-2"}
+                                                      placeholder={"Type Question here..."}/>
                                     </Form.Group>
                                     <br/>
 
                                     <Form.Label>Options</Form.Label>
-                                    <Form.Group controlId={"question"} >
-                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 1"} />
-                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 2"} />
-                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 3"} />
-                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 4"} />
+                                    <Form.Group controlId={"question"}>
+                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 1"}/>
+                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 2"}/>
+                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 3"}/>
+                                        <Form.Control type={"text"} className={"m-2"} placeholder={"Option 4"}/>
                                     </Form.Group>
 
                                     <br/>
-                                    <Form.Group controlId={"question"} >
+                                    <Form.Group controlId={"question"}>
                                         <Form.Label>Marks</Form.Label>
-                                        <Form.Control type={"number"} className={"m-2"} placeholder={"Marks"} />
+                                        <Form.Control type={"number"} className={"m-2"} placeholder={"Marks"}/>
                                     </Form.Group>
 
 
@@ -439,25 +501,16 @@
                                     </div>
 
 
-
                                 </Form>
                             </Modal.Body>
                         </Modal>
                     }
 
 
-
-
-
                 </div>
                 {/* =============      Tabs for lesson       ================== */}
 
 
-
-
-
-
-
             </main>
 
             {/*=============== End Of Main  ==================*/}
@@ -510,7 +563,6 @@
                         </div>
 
 
-
                         <div className="update">
                             <div className="profile-photo">
                                 <h3>- SE</h3>
@@ -525,18 +577,15 @@
                         </div>
 
 
-
                     </div>
                 </div>
                 {/*====================== End of Recent Updates ====================== */}
 
 
-
             </div>
             {/*============= End of left Side*/}
 
 
-
         </LayoutTeacher>
     );
 };
Index: frontend/pages/dashboard-teacher/courses/[course]/LessonController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n//  Get the lesson details of that course by its ID.\r\n// output: [objects of lessons]\r\nexport const getLessonDetailsByCourse = async (courseID) => {\r\n  const response = await axios.get(\r\n    `http://localhost:7000/api/v1/lesson/${courseID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.lessons;\r\n};\r\n// console.log(\"Lesson Details\", getLessonDetailsByCourse(\"testID\"));\r\n\r\n// \tGet the Content of that lesson\r\n// output [link of contents of specified lesson]\r\nexport const getContentsByLesson = async (lessonID) => {\r\n  const response = await axios.get(\r\n    `http://localhost:7000/api/v1/lesson/content/${lessonID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.content;\r\n};\r\n// console.log(\"Contents\", getContentsByLesson(\"6452547c1f2d691aa5a8ad7d\"));\r\n\r\n// \tGet the Assignments of that lesson\r\n// output [object of assignments of specified lesson]\r\nexport const getAssignmentsByLesson = async (lessonID) => {\r\n  const response = await axios.get(\r\n    `http://localhost:7000/api/v1/assignment/${lessonID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.assignments;\r\n};\r\n// console.log(\"Assignments\", getAssignmentsByLesson(\"6452547c1f2d691aa5a8ad7d\"));\r\n\r\n// \tGet Quizes of that lesson\r\n// output [object of quizes of specified lesson]\r\nexport const getQuizesByLesson = async (lessonID) => {\r\n  const response = await axios.get(\r\n    `http://localhost:7000/api/v1/quiz/${lessonID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.quiz;\r\n};\r\n// console.log(\"Quiz\", getQuizesByLesson(\"6452547c1f2d691aa5a8ad7d\"));\r\n\r\n// \tGet event of that lesson\r\n// output [object of quizes of specified lesson]\r\nexport const getEventsByLesson = async (lessonID) => {\r\n  const response = await axios.get(\r\n    `http://localhost:7000/api/v1/event/${lessonID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.event;\r\n};\r\n// console.log(\"Event\", getEventsByLesson(\"6452547c1f2d691aa5a8ad7d\"));\r\n\r\n// \tPost requests for content\r\n// output {success and message property}\r\nexport const postContentByLesson = async (lessonID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/lesson/create/content/${lessonID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"P-Lesson\",\r\n//   postContentByLesson(\"6452547c1f2d691aa5a8ad7d\", {\r\n//     content: \"www.drive.com/introduction-to-eng-p3.pdf\",\r\n//   })\r\n// );\r\n\r\n// \tPost requests for assignment\r\n// output {success and message property}\r\nexport const postAssignmentByLesson = async (lessonID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.post(\r\n    `http://localhost:7000/api/v1/assignment/${lessonID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"P-Assignment\",\r\n//   postAssignmentByLesson(\"6452547c1f2d691aa5a8ad7d\", {\r\n//     name: \"Assignment02\",\r\n//     description: \"Assignment02 of English-6 P2\",\r\n//     fileName: \"Assignment02.pdf\",\r\n//     fileLink:\r\n//       \"https://drive.google.com/file/d/1Gscx-Il0w04cOzS9d5r6b42tpydrZi28/view?usp=share_link\",\r\n//     totalMarks: 20,\r\n//     deadLine: \"2023-04-05\",\r\n//   })\r\n// );\r\n\r\n// \tPost requests for event\r\n// output {success, message and event property}\r\nexport const postEventByLesson = async (lessonID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.post(\r\n    `http://localhost:7000/api/v1/event/${lessonID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"P-Event\",\r\n//   postEventByLesson(\"6452547c1f2d691aa5a8ad7d\", {\r\n//     name: \"Introduction to English-6 P2\",\r\n//     description: \"Live Class: Introduction to English-6 P2\",\r\n//     eventDate: \"2023-04-25\",\r\n//     duration: { hours: 1, minutes: 0, seconds: \"0\" },\r\n//     eventPassword: \"123\",\r\n//     eventLink:\r\n//       \"www.youtube.com/live/introduction-to-eng-2/2398787w5r6yrwe5rqwe\",\r\n//   })\r\n// );\r\n\r\n// Post requests for Quiz\r\n// output {message and success property}\r\nexport const postQuizByLesson = async (lessonID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.post(\r\n    `http://localhost:7000/api/v1/quiz/${lessonID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"P-Quiz\",\r\n//   postQuizByLesson(\"6452547c1f2d691aa5a8ad7d\", {\r\n//     name: \"Quiz: Intro to Eng-6 P2\",\r\n//     description: \"Suprised Quiz\",\r\n//     startTime: { hours: 3, minutes: 0, seconds: \"0\" },\r\n//     duration: { hours: 0, minutes: 15, seconds: \"0\" },\r\n//   })\r\n// );\r\n\r\n// Post requests for Quiz\r\n// output {message and success property}\r\nexport const postQuestionsByQuiz = async (quizID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/quiz/questions/${quizID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"P-Quiz-Questions\",\r\n//   postQuestionsByQuiz(\"6457d06f6408640deeaceee4\", {\r\n//     questions: [\r\n//       {\r\n//         question: \"What is English?\",\r\n//         questionOptions: [\"o1\", \"o1\", \"o1\", \"o1\"],\r\n//         questionAnswer: \"o1\",\r\n//         isCorrect: true,\r\n//       },\r\n//       {\r\n//         question: \"What is English?\",\r\n//         questionOptions: [\"o1\", \"o1\", \"o1\", \"o1\"],\r\n//         questionAnswer: \"o1\",\r\n//         isCorrect: true,\r\n//       },\r\n//       {\r\n//         question: \"What is English?\",\r\n//         questionOptions: [\"o1\", \"o1\", \"o1\", \"o1\"],\r\n//         questionAnswer: \"o1\",\r\n//         isCorrect: true,\r\n//       },\r\n//     ],\r\n//   })\r\n// );\r\n\r\n// \tPut request for content,\r\n// output {content property}\r\nexport const updateContent = async (lessonID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/lesson/update/content/${lessonID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"U-Content\",\r\n//   updateContent(\"6452547c1f2d691aa5a8ad7d\", {\r\n//     content: \"www.drive.com/introduction-to-ps-v1.pdf\",\r\n//   })\r\n// );\r\n\r\n// \tPut request for assignment\r\n// Output {message,success, and assignment property}\r\nexport const updateAssignment = async (assignmentID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/assignment/update/${assignmentID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"U-Assignment\",\r\n//   updateAssignment(\"64526b89dc8e8a1328433b42\", {\r\n//     name: \"Assignment01-P2\",\r\n//     description: \"Assignment01-P2 of Lesson01\",\r\n//     fileName: \"Assignment01-P2.pdf\",\r\n//     fileLink:\r\n//       \"https://drive.google.com/file/d/1Gscx-Il0w04cOzS9d5r6b42tpydrZi28/view?usp=share_link\",\r\n//     totalMarks: 10,\r\n//     deadLine: \"2023-04-04\",\r\n//   })\r\n// );\r\n\r\n// \tPut request for event\r\n// output {message, success, and event property}\r\nexport const updateEvent = async (eventID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/event/${eventID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n// console.log(\r\n//   \"U-Event\",\r\n//   updateEvent(\"64525d92d3a7ac7e2abd88aa\", {\r\n//     name: \"Live Class: Introduction to English\",\r\n//     description: \"Introduction to Eng online class\",\r\n//     eventDate: \"2023-04-26\",\r\n//     duration: { hours: 0, minutes: 45, seconds: \"0\" },\r\n//     eventPassword: \"12345\",\r\n//     eventLink: \"www.youtube.com/live/introduction-to-eng/2398787w5r6yrwe5rqwf\",\r\n//   })\r\n// );\r\n\r\n// \tPut request for Quiz\r\nexport const updateQuiz = async (quizID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/quiz/${quizID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n// data object\r\n// {\r\n//      \"name\": \"Quiz: Intro to Pakistan Studies\",\r\n//     \"description\": \"Suprised Quiz\",\r\n//     \"startTime\": {\"hours\": 3 , \"minutes\": 0, \"seconds\": \"0\"},\r\n//     \"duration\": {\"hours\": 0 , \"minutes\": 15, \"seconds\": \"0\"}\r\n// }\r\n\r\n// \tPut request for Quiz\r\nexport const updateQuizQuestions = async (quizID, data) => {\r\n  let payLoad = data;\r\n\r\n  const response = await axios.put(\r\n    `http://localhost:7000/api/v1/quiz/questions/update/${quizID}`,\r\n    payLoad,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n//data object\r\n// {\r\n//     \"questions\": [\r\n//         {\r\n//             \"question\": \"What is Pakistan Studies 01\",\r\n//             \"questionOptions\": [\"o1\",\"o1\",\"o1\",\"o1\"],\r\n//             \"questionAnswer\": \"o1\",\r\n//             \"isCorrect\": true\r\n//         },\r\n//         {\r\n//             \"question\": \"What is Pakistan Studies 02\",\r\n//             \"questionOptions\": [\"o1\",\"o1\",\"o1\",\"o1\"],\r\n//             \"questionAnswer\": \"o1\",\r\n//             \"isCorrect\": true\r\n//         },\r\n//         {\r\n//             \"question\": \"What is Pakistan Studies 03\",\r\n//             \"questionOptions\": [\"o1\",\"o1\",\"o1\",\"o1\"],\r\n//             \"questionAnswer\": \"o1\",\r\n//             \"isCorrect\": true\r\n//         }\r\n//     ]\r\n// }\r\n\r\n// \tDelete request for content,\r\n// output {updated lesson and success property}\r\nexport const deleteContentByLesson = async (lessonID) => {\r\n  const response = await axios.delete(\r\n    `http://localhost:7000/api/v1/lesson/delete/content/${lessonID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\r\n//   \"Delete-Content\",\r\n//   deleteContentByLesson(\"6452547c1f2d691aa5a8ad7d\")\r\n// );\r\n\r\n// \tDelete request for assignment\r\n// output {updated lesson and success property}\r\nexport const deleteAssignmentByID = async (assignmentID) => {\r\n  const response = await axios.delete(\r\n    `http://localhost:7000/api/v1/assignment/delete/${assignmentID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//console.log(\"Delete-Ass\", deleteAssignmentByID(\"6457ce236408640deeaceeda\"));\r\n\r\n// \tDelete request for event\r\n// output {updated lesson and success property}\r\nexport const deleteEventByID = async (eventID) => {\r\n  const response = await axios.delete(\r\n    `http://localhost:7000/api/v1/event/${eventID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\"Delete-Event\", deleteEventByID(\"6457cfaf6408640deeaceedf\"));\r\n\r\n// \tDelete request for Quiz\r\n// output {updated lesson and success property}\r\nexport const deleteQuizByID = async (quizID) => {\r\n  const response = await axios.delete(\r\n    `http://localhost:7000/api/v1/quiz/${quizID}`,\r\n    {\r\n      headers: {\r\n        Authorization: `${Cookies.get(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// console.log(\"Delete-Quiz\", deleteQuizByID(\"6457d06f6408640deeaceee4\"));\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js b/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js
--- a/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js	(date 1683547886130)
@@ -1,101 +1,80 @@
 import axios from "axios";
 import Cookies from "js-cookie";
 
-//  Get the lesson details of that course by its ID.
-// output: [objects of lessons]
-export const getLessonDetailsByCourse = async (courseID) => {
-  const response = await axios.get(
-    `http://localhost:7000/api/v1/lesson/${courseID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
 
-  return response.data.lessons;
-};
 // console.log("Lesson Details", getLessonDetailsByCourse("testID"));
 
 // 	Get the Content of that lesson
 // output [link of contents of specified lesson]
-export const getContentsByLesson = async (lessonID) => {
-  const response = await axios.get(
-    `http://localhost:7000/api/v1/lesson/content/${lessonID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
 
-  return response.data.content;
-};
 // console.log("Contents", getContentsByLesson("6452547c1f2d691aa5a8ad7d"));
 
 // 	Get the Assignments of that lesson
 // output [object of assignments of specified lesson]
 export const getAssignmentsByLesson = async (lessonID) => {
-  const response = await axios.get(
-    `http://localhost:7000/api/v1/assignment/${lessonID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
+    const response = await axios.get(
+        `http://localhost:7000/api/v1/assignment/${lessonID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
 
-  return response.data.assignments;
+    return response.data.assignments;
 };
 // console.log("Assignments", getAssignmentsByLesson("6452547c1f2d691aa5a8ad7d"));
 
 // 	Get Quizes of that lesson
 // output [object of quizes of specified lesson]
+// {
+// }
+
 export const getQuizesByLesson = async (lessonID) => {
-  const response = await axios.get(
-    `http://localhost:7000/api/v1/quiz/${lessonID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
+    const response = await axios.get(
+        `http://localhost:7000/api/v1/quiz/${lessonID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
 
-  return response.data.quiz;
+    return response.data.quiz;
 };
 // console.log("Quiz", getQuizesByLesson("6452547c1f2d691aa5a8ad7d"));
 
 // 	Get event of that lesson
 // output [object of quizes of specified lesson]
 export const getEventsByLesson = async (lessonID) => {
-  const response = await axios.get(
-    `http://localhost:7000/api/v1/event/${lessonID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
+    const response = await axios.get(
+        `http://localhost:7000/api/v1/event/${lessonID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
 
-  return response.data.event;
+    return response.data.event;
 };
 // console.log("Event", getEventsByLesson("6452547c1f2d691aa5a8ad7d"));
 
 // 	Post requests for content
 // output {success and message property}
 export const postContentByLesson = async (lessonID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/lesson/create/content/${lessonID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/lesson/create/content/${lessonID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -108,18 +87,18 @@
 // 	Post requests for assignment
 // output {success and message property}
 export const postAssignmentByLesson = async (lessonID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.post(
-    `http://localhost:7000/api/v1/assignment/${lessonID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.post(
+        `http://localhost:7000/api/v1/assignment/${lessonID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -138,18 +117,18 @@
 // 	Post requests for event
 // output {success, message and event property}
 export const postEventByLesson = async (lessonID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.post(
-    `http://localhost:7000/api/v1/event/${lessonID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.post(
+        `http://localhost:7000/api/v1/event/${lessonID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -168,18 +147,18 @@
 // Post requests for Quiz
 // output {message and success property}
 export const postQuizByLesson = async (lessonID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.post(
-    `http://localhost:7000/api/v1/quiz/${lessonID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.post(
+        `http://localhost:7000/api/v1/quiz/${lessonID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -195,18 +174,18 @@
 // Post requests for Quiz
 // output {message and success property}
 export const postQuestionsByQuiz = async (quizID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/quiz/questions/${quizID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/quiz/questions/${quizID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -238,18 +217,18 @@
 // 	Put request for content,
 // output {content property}
 export const updateContent = async (lessonID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/lesson/update/content/${lessonID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/lesson/update/content/${lessonID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -262,18 +241,18 @@
 // 	Put request for assignment
 // Output {message,success, and assignment property}
 export const updateAssignment = async (assignmentID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/assignment/update/${assignmentID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/assignment/update/${assignmentID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -292,18 +271,18 @@
 // 	Put request for event
 // output {message, success, and event property}
 export const updateEvent = async (eventID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/event/${eventID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/event/${eventID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 // console.log(
 //   "U-Event",
@@ -319,18 +298,18 @@
 
 // 	Put request for Quiz
 export const updateQuiz = async (quizID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/quiz/${quizID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/quiz/${quizID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 // data object
 // {
@@ -342,18 +321,18 @@
 
 // 	Put request for Quiz
 export const updateQuizQuestions = async (quizID, data) => {
-  let payLoad = data;
+    let payLoad = data;
 
-  const response = await axios.put(
-    `http://localhost:7000/api/v1/quiz/questions/update/${quizID}`,
-    payLoad,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.put(
+        `http://localhost:7000/api/v1/quiz/questions/update/${quizID}`,
+        payLoad,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 //data object
 // {
@@ -382,15 +361,15 @@
 // 	Delete request for content,
 // output {updated lesson and success property}
 export const deleteContentByLesson = async (lessonID) => {
-  const response = await axios.delete(
-    `http://localhost:7000/api/v1/lesson/delete/content/${lessonID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.delete(
+        `http://localhost:7000/api/v1/lesson/delete/content/${lessonID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log(
@@ -401,15 +380,15 @@
 // 	Delete request for assignment
 // output {updated lesson and success property}
 export const deleteAssignmentByID = async (assignmentID) => {
-  const response = await axios.delete(
-    `http://localhost:7000/api/v1/assignment/delete/${assignmentID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.delete(
+        `http://localhost:7000/api/v1/assignment/delete/${assignmentID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 //console.log("Delete-Ass", deleteAssignmentByID("6457ce236408640deeaceeda"));
@@ -417,15 +396,15 @@
 // 	Delete request for event
 // output {updated lesson and success property}
 export const deleteEventByID = async (eventID) => {
-  const response = await axios.delete(
-    `http://localhost:7000/api/v1/event/${eventID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.delete(
+        `http://localhost:7000/api/v1/event/${eventID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log("Delete-Event", deleteEventByID("6457cfaf6408640deeaceedf"));
@@ -433,15 +412,15 @@
 // 	Delete request for Quiz
 // output {updated lesson and success property}
 export const deleteQuizByID = async (quizID) => {
-  const response = await axios.delete(
-    `http://localhost:7000/api/v1/quiz/${quizID}`,
-    {
-      headers: {
-        Authorization: `${Cookies.get("token")}`,
-      },
-    }
-  );
-  return response.data;
+    const response = await axios.delete(
+        `http://localhost:7000/api/v1/quiz/${quizID}`,
+        {
+            headers: {
+                Authorization: `${Cookies.get("token")}`,
+            },
+        }
+    );
+    return response.data;
 };
 
 // console.log("Delete-Quiz", deleteQuizByID("6457d06f6408640deeaceee4"));
Index: .idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm__Changes_.xml	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ /dev/null	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm_[Changes]" date="1683374198128" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 06/05/2023 4:55 pm [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d9b86c9f-0b89-4563-ba11-369d16e7ec77\" name=\"Changes\" comment=\"Done Teacher Dashboard\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package\" />\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"recentBranches\">\r\n      <RecentBranches>\r\n        <option name=\"branchesForRepo\">\r\n          <list>\r\n            <RecentBranchesForRepo>\r\n              <option name=\"branches\">\r\n                <list>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"main\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1682926899\" />\r\n                  </RecentBranch>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"momin/integration\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1682925767\" />\r\n                  </RecentBranch>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"momin/frontend\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1682559398\" />\r\n                  </RecentBranch>\r\n                </list>\r\n              </option>\r\n              <option name=\"repositoryRootUrl\" value=\"file://$PROJECT_DIR$\" />\r\n            </RecentBranchesForRepo>\r\n          </list>\r\n        </option>\r\n      </RecentBranches>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OwQjWLZS1b3diOptnGkSwbCGxA\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/KiNG/WebstormProjects/fyp-virtual-school/frontend/pages/dashboard-teacher/courses&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,\r\n    &quot;ts.external.directory.path&quot;: &quot;C:\\\\Users\\\\Momin\\\\AppData\\\\Local\\\\JetBrains\\\\Toolbox\\\\apps\\\\WebStorm\\\\ch-0\\\\231.8109.174\\\\plugins\\\\javascript-impl\\\\jsLanguageServicesImpl\\\\external&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ReactDesignerToolWindowState\">\r\n    <option name=\"myId2Visible\">\r\n      <map>\r\n        <entry key=\"com.haulmont.rcb.reactComponents\" value=\"false\" />\r\n        <entry key=\"com.haulmont.rcb.reactInspector\" value=\"false\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\KiNG\\WebstormProjects\\fyp-virtual-school\\frontend\\pages\\dashboard-teacher\\courses\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Momin\\WebstormProjects\\fyp-virtual-school\\frontend\\pages\\dashboard-student\\courses\\[course]\" />\r\n      <recent name=\"C:\\Users\\Momin\\WebstormProjects\\fyp-virtual-school\\frontend\\pages\\dashboard-teacher\\courses\\[course]\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"dev\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/frontend/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"dev\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"npm.dev\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d9b86c9f-0b89-4563-ba11-369d16e7ec77\" name=\"Changes\" comment=\"\" />\r\n      <created>1682469300735</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682469300735</updated>\r\n      <workItem from=\"1682469305337\" duration=\"6339000\" />\r\n      <workItem from=\"1682562740434\" duration=\"10280000\" />\r\n      <workItem from=\"1682652751832\" duration=\"30108000\" />\r\n      <workItem from=\"1682909993062\" duration=\"7427000\" />\r\n      <workItem from=\"1683214888667\" duration=\"10271000\" />\r\n      <workItem from=\"1683272392423\" duration=\"3957000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Done Teacher Dashboard\">\r\n      <created>1683225338573</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683225338573</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Done Teacher Dashboard\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Done Teacher Dashboard\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/.idea/workspace.xml	(date 1683547818798)
@@ -4,8 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d9b86c9f-0b89-4563-ba11-369d16e7ec77" name="Changes" comment="Done Teacher Dashboard">
+    <list default="true" id="d9b86c9f-0b89-4563-ba11-369d16e7ec77" name="Changes" comment="Updated">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_05_2023_4_55_pm__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/CourseController.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/LessonController.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/[slug].js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/[slug].js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -64,24 +69,29 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/KiNG/WebstormProjects/fyp-virtual-school/frontend/pages/dashboard-teacher/courses&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
-    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\Momin\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "main",
+    "ignore.virus.scanning.warn.message": "true",
+    "last_opened_file_path": "C:/Users/KiNG/WebstormProjects/fyp-virtual-school/frontend/pages/dashboard-teacher/courses",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "yarn",
+    "ts.external.directory.path": "C:\\Users\\Momin\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external",
+    "vue.rearranger.settings.migration": "true"
+  },
+  "keyToStringList": {
+    "DatabaseDriversLRU": [
+      "mongo"
+    ]
   }
-}</component>
+}]]></component>
   <component name="ReactDesignerToolWindowState">
     <option name="myId2Visible">
       <map>
@@ -130,6 +140,8 @@
       <workItem from="1682909993062" duration="7427000" />
       <workItem from="1683214888667" duration="10271000" />
       <workItem from="1683272392423" duration="3957000" />
+      <workItem from="1683511713916" duration="3124000" />
+      <workItem from="1683539463882" duration="666000" />
     </task>
     <task id="LOCAL-00001" summary="Done Teacher Dashboard">
       <created>1683225338573</created>
@@ -148,4 +160,15 @@
     <MESSAGE value="Done Teacher Dashboard" />
     <option name="LAST_COMMIT_MESSAGE" value="Done Teacher Dashboard" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="javascript">
+          <url>file://$PROJECT_DIR$/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js</url>
+          <line>23</line>
+          <option name="timeStamp" value="3" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: frontend/pages/dashboard-teacher/courses/[course]/unit-01.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState} from \"react\";\r\nimport Link from \"next/link\";\r\nimport {Button, Card, Dropdown, Form, Modal, Nav} from \"react-bootstrap\";\r\nimport LayoutTeacher from \"../../../../components/Dashboard/Layout/LayoutTeacher\";\r\nimport {getLessonDetailsByCourse} from \"./LessonController\";\r\n\r\nconst Unit01 = () => {\r\n    const [modal, setModal] = useState({\r\n        item: 0,\r\n        active: false,\r\n    });\r\n    const [eventKey, setEventKey] = useState(0);\r\n    const [isModalAddQuestion, setIsModalAddQuestion] = useState(false);\r\n\r\n    return (\r\n        <LayoutTeacher>\r\n            {/*=============== Start of Main ================= */}\r\n\r\n            <main>\r\n                <h1>Overview</h1>\r\n\r\n                <div\r\n                    className=\"\"\r\n                    style={{\r\n                        paddingBlock: \"1rem\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <span>Unit 1</span>\r\n                        <h3>Speaking to the world</h3>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button className={\"btn btn-primary\"}>Next Lesson</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        paddingBlock: \"1rem\",\r\n                        border: \"1px solid red\",\r\n                    }}\r\n                >\r\n                    vector image...\r\n                </div>\r\n                <br/>\r\n\r\n\r\n\r\n                {/* ============== Dropdown Menu to create Assignments, Quiz, etc ========================== */}\r\n                    <Dropdown>\r\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                        Create\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => setModal({item: 1, active: true})}>\r\n                            Content\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 2, active: true})}>\r\n                            Events\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 3, active: true})}>\r\n                            Assignment\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => setModal({item: 4, active: true})}>\r\n                            Quiz\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                {/* ============== Dropdown Menu Ends Here =================== */}\r\n\r\n\r\n\r\n\r\n                {/* ==================== Events Modals according to the Create event from Dropdown ========================= */}\r\n                    <div className={\"\"}>\r\n                    <Modal\r\n                        show={modal.active}\r\n                        onHide={() => setModal({item: 0, active: false})}\r\n                        dialogClassName=\"custom-modal\"\r\n                        size={\"lg\"}\r\n                        aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        centered\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                                {modal.item === 1 ? (\r\n                                    <div>Add Content</div>\r\n                                ) : modal.item === 2 ? (\r\n                                    <div>Add Event</div>\r\n                                ) : modal.item === 3 ? (\r\n                                    <div>Add Assignment</div>\r\n                                ) : modal.item === 4 ? (\r\n                                    <div>Add Quiz</div>\r\n                                ) : (\r\n                                    \"\"\r\n                                )}\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            {modal.item === 1 ? (\r\n                                <div>\r\n                                    {/* Content Modal */}\r\n                                    <ContentModal />\r\n                                </div>\r\n                            ) : modal.item === 2 ? (\r\n                                <div>\r\n                                    {/* Event Modal */}\r\n                                    <EventModal />\r\n                                </div>\r\n                            ) : modal.item === 3 ? (\r\n                                <div className=\"\">\r\n                                    {/* Assignments Modal */}\r\n                                    <AssignmentModal />\r\n                                </div>\r\n                            ) : modal.item === 4 ? (\r\n                                <div className=\"\">\r\n                                    {/*  Quiz Modal  */}\r\n                                    <QuizModal />\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n                {/* ==================== Events Modal Code Ends Here ==================================  */}\r\n\r\n\r\n\r\n\r\n\r\n                {/* ============= Tabs for lesson, Live Video, Assignments, Exercises, Quizes, Other Section ================= */}\r\n                    <Nav className={\"mt-5 mb-5\"} fill variant=\"tabs\" defaultActiveKey=\"#\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#\" onClick={() => setEventKey(0)}>\r\n                            Content\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-1\" onClick={() => setEventKey(1)}>\r\n                            Events\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-2\" onClick={() => setEventKey(2)}>\r\n                            Assignments\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-4\" onClick={() => setEventKey(3)}>\r\n                            Quizes\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                {/* =========== Tabs End Here ================  */}\r\n\r\n\r\n\r\n\r\n\r\n                {/* ============= Tabs running by conditional rendering ================= */}\r\n                    <div className=\"\">\r\n\r\n\r\n                    {\r\n\r\n                        eventKey === 0 ?\r\n                        <div>\r\n                            {/*Lesson Tab*/}\r\n                            <ContentData />\r\n                        </div>\r\n                        : eventKey === 1 ?\r\n                        <div>\r\n                            {/*Event Tab*/}\r\n                            <EventData />\r\n                        </div>\r\n                        : eventKey === 2 ?\r\n                        <div>\r\n                            {/*Assignments Tab*/}\r\n                            <AssignmentData />\r\n                        </div>\r\n                        : eventKey === 3 ?\r\n                        <div>\r\n                            {/*Quiz Tab*/}\r\n                            <QuizData onChange={setIsModalAddQuestion} />\r\n                        </div>\r\n\r\n                        : \"\"\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                    {isModalAddQuestion && (\r\n                        <div>\r\n                            <QuizAddQuestionsModal  isCheck={isModalAddQuestion} onChange={setIsModalAddQuestion}  />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {/* =============      Tabs running code Ends here       ================== */}\r\n\r\n\r\n\r\n\r\n\r\n            </main>\r\n\r\n            {/* =================  End Of Main  ================== */}\r\n\r\n\r\n\r\n\r\n\r\n            {/* ============== start of Right side ======================== */}\r\n            <div className=\"right\">\r\n                <div className=\"profile\">\r\n                    <div className=\"info\">\r\n                        <p>\r\n                            Hey, <b>Teacher</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"profile-photo\"></div>\r\n                </div>\r\n\r\n                {/*====================== Start of Recent Updates ==================== */}\r\n                <div className=\"recent-updates\">\r\n                    <h2>Notice Board</h2>\r\n                    <div className=\"updates\">\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- UX</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>Assignment due 20 March</p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- SEO</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>Assignment due 21 March</p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"update\">\r\n                            <div className=\"profile-photo\">\r\n                                <h3>- SE</h3>\r\n                            </div>\r\n\r\n                            <div className=\"message\">\r\n                                <p>Assignment due 25 March</p>\r\n                                <small className=\"text-muted\">2 Minutes Ago</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*====================== End of Recent Updates ====================== */}\r\n            </div>\r\n            {/*============= End of left Side*/}\r\n        </LayoutTeacher>\r\n    );\r\n};\r\n\r\nexport default Unit01;\r\n\r\n\r\n\r\n\r\n\r\n// ================================== Modals for Creating Events  ==============================================\r\nexport function ContentModal() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Form>\r\n                <Form.Group controlId={\"\"}>\r\n                    <Form.Label>File Link</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"File Link\"}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <br/>\r\n                <Modal.Footer>\r\n                    <Button>Submit</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function EventModal() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Form>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Title\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Description\"}\r\n                    />\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        type={\"date\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Date\"}\r\n                    />\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <label htmlFor=\"\">Hours</label>\r\n                            <br/>\r\n                            <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"\">Minutes</label>\r\n                            <br/>\r\n                            <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"\">Seconds</label>\r\n                            <br/>\r\n                            <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Event Link</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Link\"}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Event Password</Form.Label>\r\n                    <Form.Control\r\n                        type={\"password\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Event Password\"}\r\n                    />\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <br/>\r\n                <Modal.Footer>\r\n                    <Button type={\"submit\"}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function AssignmentModal() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Form>\r\n                <Form.Group controlId={\"Title\"}>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Title\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"Title\"}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Description\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"file\"}>\r\n                    <Form.Label>File Name</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"File Name\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"file\"}>\r\n                    <Form.Label>File</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Add File Link\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <Form.Label>Deadline</Form.Label>\r\n                    <Form.Control\r\n                        type={\"date\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Date\"}\r\n                    />\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <Form.Group controlId={\"file\"}>\r\n                    <Form.Label>Marks</Form.Label>\r\n                    <Form.Control\r\n                        type={\"number\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Marks\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Modal.Footer>\r\n                    <Button type={\"submit\"}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function QuizModal() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Form>\r\n                <Form.Group controlId={\"question\"}>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Name\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"question\"}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        className={\"m-2\"}\r\n                        placeholder={\"Description\"}\r\n                    />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <label>Start Time</label>\r\n                    <br/>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <Form.Group controlId={\"name\"}>\r\n                    <label>End Time</label>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Form.Control placeholder={\"Hours\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Form.Control placeholder={\"Minutes\"} type=\"text\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Form.Control placeholder={\"Seconds\"} type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>{\" \"}\r\n                <br/>\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"isLive\"/>\r\n                    <label htmlFor=\"isLive\"> isLive</label>\r\n                </div>\r\n                <br/>\r\n                <Modal.Footer>\r\n                    <Button type={\"submit\"}>Submit</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport function QuizAddQuestionsModal(props) {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Modal\r\n                show={props.isCheck}\r\n                onHide={() => props.onChange(false)}\r\n                dialogClassName=\"custom-modal\"\r\n                size={\"lg\"}\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Add Quiz\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        handleSubmit={(e) => {\r\n                            e.preventDefault();\r\n                        }}\r\n                    >\r\n                        <Form.Group controlId={\"question\"}>\r\n                            <Form.Label>Question</Form.Label>\r\n                            <Form.Control\r\n                                type={\"text\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Type Question here...\"}\r\n                            />\r\n                        </Form.Group>\r\n                        <br/>\r\n\r\n                        <Form.Label>Options</Form.Label>\r\n                        <Form.Group controlId={\"question\"}>\r\n                            <Form.Control\r\n                                type={\"text\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Option 1\"}\r\n                            />\r\n                            <Form.Control\r\n                                type={\"text\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Option 2\"}\r\n                            />\r\n                            <Form.Control\r\n                                type={\"text\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Option 3\"}\r\n                            />\r\n                            <Form.Control\r\n                                type={\"text\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Option 4\"}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <br/>\r\n                        <Form.Group controlId={\"question\"}>\r\n                            <Form.Label>Marks</Form.Label>\r\n                            <Form.Control\r\n                                type={\"number\"}\r\n                                className={\"m-2\"}\r\n                                placeholder={\"Marks\"}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <div\r\n                            style={{display: \"flex\", justifyContent: \"space-between\"}}\r\n                        >\r\n                            <Button type={\"submit\"}>Submit</Button>\r\n                            <Button type={\"submit\"}>Next</Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n// ================================= Modal for Events Code Ends Here =============================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ================================= Tabs Content Data =============================================\r\n\r\nexport function ContentData() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Card>\r\n                <Card.Header>Content</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>File Link</Card.Text>\r\n                    <div>\r\n                        <Button variant=\"primary\">Edit</Button>\r\n                        <Button className={\"m-1\"} variant=\"primary\">\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>{\" \"}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function EventData() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Card>\r\n                <Card.Header>Event Title</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Description</Card.Title>\r\n                    <Card.Text>Event Date</Card.Text>\r\n                    <Button variant=\"primary\">Go to Event</Button>\r\n                </Card.Body>\r\n            </Card>{\" \"}\r\n            <br/>\r\n            <Card>\r\n                <Card.Header>Event Title</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Description</Card.Title>\r\n                    <Card.Text>Event Date</Card.Text>\r\n                    <div>\r\n                        <Button variant=\"primary\">Edit</Button>\r\n                        <Button className={\"m-1\"} variant=\"primary\">\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function AssignmentData() {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Card>\r\n                <Card.Header>Assignment Title</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Description</Card.Title>\r\n                    <Card.Text>File Link</Card.Text>\r\n\r\n                    <div>\r\n                        <Button variant=\"primary\">Go to Event</Button>\r\n                        <Button className={\"m-1\"} variant=\"primary\">\r\n                            View Submissions\r\n                        </Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <br/>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function QuizData(props) {\r\n\r\n    return(\r\n        <>\r\n\r\n            <Card>\r\n                <Card.Header>Quiz Title</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Description</Card.Title>\r\n\r\n                    <div>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={() => {\r\n                                props.onChange(true);\r\n                            }}\r\n                        >\r\n                            Add Questions\r\n                        </Button>\r\n\r\n                        <Button className={\"m-1\"} variant={\"primary\"}>\r\n                            View Submissions\r\n                        </Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <br/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// ================================= Tabs Content Ends Here =============================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js b/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js
--- a/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js	(revision fa11cf02958f25ce20900fc028cda8cb46d4d953)
+++ b/frontend/pages/dashboard-teacher/courses/[course]/unit-01.js	(date 1683512111580)
@@ -3,15 +3,20 @@
 import {Button, Card, Dropdown, Form, Modal, Nav} from "react-bootstrap";
 import LayoutTeacher from "../../../../components/Dashboard/Layout/LayoutTeacher";
 import {getLessonDetailsByCourse} from "./LessonController";
+import {useRouter} from "next/router";
 
 const Unit01 = () => {
+
+
+    const [lesson, setLesson] = useState(null);
+    const [loadingLesson, setLoadingLesson] = useState(false);
+
     const [modal, setModal] = useState({
         item: 0,
         active: false,
     });
     const [eventKey, setEventKey] = useState(0);
     const [isModalAddQuestion, setIsModalAddQuestion] = useState(false);
-
     return (
         <LayoutTeacher>
             {/*=============== Start of Main ================= */}
@@ -46,11 +51,7 @@
                     vector image...
                 </div>
                 <br/>
-
-
-
-                {/* ============== Dropdown Menu to create Assignments, Quiz, etc ========================== */}
-                    <Dropdown>
+                <Dropdown>
                     <Dropdown.Toggle variant="primary" id="dropdown-basic">
                         Create
                     </Dropdown.Toggle>
@@ -71,13 +72,8 @@
                     </Dropdown.Menu>
                 </Dropdown>
 
-                {/* ============== Dropdown Menu Ends Here =================== */}
-
-
-
-
-                {/* ==================== Events Modals according to the Create event from Dropdown ========================= */}
-                    <div className={""}>
+                {/*Setting Modals according to the create event*/}
+                <div className={""}>
                     <Modal
                         show={modal.active}
                         onHide={() => setModal({item: 0, active: false})}
@@ -105,673 +101,509 @@
                         <Modal.Body>
                             {modal.item === 1 ? (
                                 <div>
-                                    {/* Content Modal */}
-                                    <ContentModal />
-                                </div>
-                            ) : modal.item === 2 ? (
-                                <div>
-                                    {/* Event Modal */}
-                                    <EventModal />
-                                </div>
-                            ) : modal.item === 3 ? (
-                                <div className="">
-                                    {/* Assignments Modal */}
-                                    <AssignmentModal />
-                                </div>
-                            ) : modal.item === 4 ? (
-                                <div className="">
-                                    {/*  Quiz Modal  */}
-                                    <QuizModal />
-                                </div>
-                            ) : (
-                                ""
-                            )}
-                        </Modal.Body>
-                    </Modal>
-                </div>
-                {/* ==================== Events Modal Code Ends Here ==================================  */}
-
-
-
-
-
-                {/* ============= Tabs for lesson, Live Video, Assignments, Exercises, Quizes, Other Section ================= */}
-                    <Nav className={"mt-5 mb-5"} fill variant="tabs" defaultActiveKey="#">
-                    <Nav.Item>
-                        <Nav.Link href="#" onClick={() => setEventKey(0)}>
-                            Content
-                        </Nav.Link>
-                    </Nav.Item>
-                    <Nav.Item>
-                        <Nav.Link eventKey="link-1" onClick={() => setEventKey(1)}>
-                            Events
-                        </Nav.Link>
-                    </Nav.Item>
-                    <Nav.Item>
-                        <Nav.Link eventKey="link-2" onClick={() => setEventKey(2)}>
-                            Assignments
-                        </Nav.Link>
-                    </Nav.Item>
-                    <Nav.Item>
-                        <Nav.Link eventKey="link-4" onClick={() => setEventKey(3)}>
-                            Quizes
-                        </Nav.Link>
-                    </Nav.Item>
-                </Nav>
-                {/* =========== Tabs End Here ================  */}
-
-
-
-
-
-                {/* ============= Tabs running by conditional rendering ================= */}
-                    <div className="">
-
-
-                    {
-
-                        eventKey === 0 ?
-                        <div>
-                            {/*Lesson Tab*/}
-                            <ContentData />
-                        </div>
-                        : eventKey === 1 ?
-                        <div>
-                            {/*Event Tab*/}
-                            <EventData />
-                        </div>
-                        : eventKey === 2 ?
-                        <div>
-                            {/*Assignments Tab*/}
-                            <AssignmentData />
-                        </div>
-                        : eventKey === 3 ?
-                        <div>
-                            {/*Quiz Tab*/}
-                            <QuizData onChange={setIsModalAddQuestion} />
-                        </div>
-
-                        : ""
-
-
-                    }
-
-
-
-
-                    {isModalAddQuestion && (
-                        <div>
-                            <QuizAddQuestionsModal  isCheck={isModalAddQuestion} onChange={setIsModalAddQuestion}  />
-                        </div>
-                    )}
-                </div>
-                {/* =============      Tabs running code Ends here       ================== */}
-
-
-
-
-
-            </main>
-
-            {/* =================  End Of Main  ================== */}
-
-
-
-
-
-            {/* ============== start of Right side ======================== */}
-            <div className="right">
-                <div className="profile">
-                    <div className="info">
-                        <p>
-                            Hey, <b>Teacher</b>
-                        </p>
-                    </div>
-
-                    <div className="profile-photo"></div>
-                </div>
-
-                {/*====================== Start of Recent Updates ==================== */}
-                <div className="recent-updates">
-                    <h2>Notice Board</h2>
-                    <div className="updates">
-                        <div className="update">
-                            <div className="profile-photo">
-                                <h3>- UX</h3>
-                            </div>
-
-                            <div className="message">
-                                <p>Assignment due 20 March</p>
-                                <small className="text-muted">2 Minutes Ago</small>
-                            </div>
-                        </div>
-
-                        <div className="update">
-                            <div className="profile-photo">
-                                <h3>- SEO</h3>
-                            </div>
-
-                            <div className="message">
-                                <p>Assignment due 21 March</p>
-                                <small className="text-muted">2 Minutes Ago</small>
-                            </div>
-                        </div>
-
-                        <div className="update">
-                            <div className="profile-photo">
-                                <h3>- SE</h3>
-                            </div>
-
-                            <div className="message">
-                                <p>Assignment due 25 March</p>
-                                <small className="text-muted">2 Minutes Ago</small>
-                            </div>
-                        </div>
-                    </div>
-                </div>
-                {/*====================== End of Recent Updates ====================== */}
-            </div>
-            {/*============= End of left Side*/}
-        </LayoutTeacher>
-    );
-};
-
-export default Unit01;
-
-
-
-
-
-// ================================== Modals for Creating Events  ==============================================
-export function ContentModal() {
-
-    return(
-        <>
-
-            <Form>
-                <Form.Group controlId={""}>
-                    <Form.Label>File Link</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"File Link"}
-                    />
-                </Form.Group>
+                                    {/* lesson Video Link */}
+                                    <Form>
+                                        <Form.Group controlId={""}>
+                                            <Form.Label>File Link</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"File Link"}
+                                            />
+                                        </Form.Group>
 
-                <br/>
-                <Modal.Footer>
-                    <Button>Submit</Button>
-                </Modal.Footer>
-            </Form>
-
-        </>
-    )
-}
-
-
-export function EventModal() {
-
-    return(
-        <>
-
-            <Form>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Title</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Title"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Description</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Description"}
-                    />
-                </Form.Group>{" "}
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Date</Form.Label>
-                    <Form.Control
-                        type={"date"}
-                        className={"m-2"}
-                        placeholder={"Date"}
-                    />
-                </Form.Group>{" "}
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <div
-                        style={{
-                            display: "flex",
-                            justifyContent: "space-between",
-                        }}
-                    >
-                        <div>
-                            <label htmlFor="">Hours</label>
-                            <br/>
-                            <Form.Control placeholder={"Hours"} type="text"/>
-                        </div>
+                                        <br/>
+                                        <Modal.Footer>
+                                            <Button>Submit</Button>
+                                        </Modal.Footer>
+                                    </Form>
+                                </div>
+                            ) : modal.item === 2 ? (
+                                <div>
+                                    {/* Event Modal */}
+                                    <Form>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Title</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Title"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Description</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Description"}
+                                            />
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Date</Form.Label>
+                                            <Form.Control
+                                                type={"date"}
+                                                className={"m-2"}
+                                                placeholder={"Date"}
+                                            />
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <div
+                                                style={{
+                                                    display: "flex",
+                                                    justifyContent: "space-between",
+                                                }}
+                                            >
+                                                <div>
+                                                    <label htmlFor="">Hours</label>
+                                                    <br/>
+                                                    <Form.Control placeholder={"Hours"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <label htmlFor="">Minutes</label>
-                            <br/>
-                            <Form.Control placeholder={"Minutes"} type="text"/>
-                        </div>
+                                                <div>
+                                                    <label htmlFor="">Minutes</label>
+                                                    <br/>
+                                                    <Form.Control placeholder={"Minutes"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <label htmlFor="">Seconds</label>
-                            <br/>
-                            <Form.Control placeholder={"Seconds"} type="text"/>
-                        </div>
-                    </div>
-                </Form.Group>{" "}
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Event Link</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Link"}
-                    />
-                </Form.Group>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Event Password</Form.Label>
-                    <Form.Control
-                        type={"password"}
-                        className={"m-2"}
-                        placeholder={"Event Password"}
-                    />
-                </Form.Group>{" "}
-                <br/>
-                <br/>
-                <Modal.Footer>
-                    <Button type={"submit"}>Submit</Button>
-                </Modal.Footer>
-            </Form>
-
-        </>
-    )
-}
-
-
-export function AssignmentModal() {
-
-    return(
-        <>
-
-            <Form>
-                <Form.Group controlId={"Title"}>
-                    <Form.Label>Title</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Title"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"Title"}>
-                    <Form.Label>Description</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Description"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"file"}>
-                    <Form.Label>File Name</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"File Name"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"file"}>
-                    <Form.Label>File</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Add File Link"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <Form.Label>Deadline</Form.Label>
-                    <Form.Control
-                        type={"date"}
-                        className={"m-2"}
-                        placeholder={"Date"}
-                    />
-                </Form.Group>{" "}
-                <br/>
-                <Form.Group controlId={"file"}>
-                    <Form.Label>Marks</Form.Label>
-                    <Form.Control
-                        type={"number"}
-                        className={"m-2"}
-                        placeholder={"Marks"}
-                    />
-                </Form.Group>
-                <br/>
-                <br/>
-                <Modal.Footer>
-                    <Button type={"submit"}>Submit</Button>
-                </Modal.Footer>
-            </Form>
-
-        </>
-    )
-}
-
-
-export function QuizModal() {
-
-    return(
-        <>
-
-            <Form>
-                <Form.Group controlId={"question"}>
-                    <Form.Label>Name</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Name"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"question"}>
-                    <Form.Label>Description</Form.Label>
-                    <Form.Control
-                        type={"text"}
-                        className={"m-2"}
-                        placeholder={"Description"}
-                    />
-                </Form.Group>
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <label>Start Time</label>
-                    <br/>
-                    <div
-                        style={{
-                            display: "flex",
-                            justifyContent: "space-between",
-                        }}
-                    >
-                        <div>
-                            <Form.Control placeholder={"Hours"} type="text"/>
-                        </div>
+                                                <div>
+                                                    <label htmlFor="">Seconds</label>
+                                                    <br/>
+                                                    <Form.Control placeholder={"Seconds"} type="text"/>
+                                                </div>
+                                            </div>
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Event Link</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Link"}
+                                            />
+                                        </Form.Group>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Event Password</Form.Label>
+                                            <Form.Control
+                                                type={"password"}
+                                                className={"m-2"}
+                                                placeholder={"Event Password"}
+                                            />
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <br/>
+                                        <Modal.Footer>
+                                            <Button type={"submit"}>Submit</Button>
+                                        </Modal.Footer>
+                                    </Form>
+                                </div>
+                            ) : modal.item === 3 ? (
+                                <div className="">
+                                    {/* Assignments Modal */}
+                                    <Form>
+                                        <Form.Group controlId={"Title"}>
+                                            <Form.Label>Title</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Title"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"Title"}>
+                                            <Form.Label>Description</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Description"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"file"}>
+                                            <Form.Label>File Name</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"File Name"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"file"}>
+                                            <Form.Label>File</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Add File Link"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <Form.Label>Deadline</Form.Label>
+                                            <Form.Control
+                                                type={"date"}
+                                                className={"m-2"}
+                                                placeholder={"Date"}
+                                            />
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <Form.Group controlId={"file"}>
+                                            <Form.Label>Marks</Form.Label>
+                                            <Form.Control
+                                                type={"number"}
+                                                className={"m-2"}
+                                                placeholder={"Marks"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <br/>
+                                        <Modal.Footer>
+                                            <Button type={"submit"}>Submit</Button>
+                                        </Modal.Footer>
+                                    </Form>
+                                </div>
+                            ) : modal.item === 4 ? (
+                                <div className="">
+                                    {/*  Quiz Modal  */}
+                                    <Form>
+                                        <Form.Group controlId={"question"}>
+                                            <Form.Label>Name</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Name"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"question"}>
+                                            <Form.Label>Description</Form.Label>
+                                            <Form.Control
+                                                type={"text"}
+                                                className={"m-2"}
+                                                placeholder={"Description"}
+                                            />
+                                        </Form.Group>
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <label>Start Time</label>
+                                            <br/>
+                                            <div
+                                                style={{
+                                                    display: "flex",
+                                                    justifyContent: "space-between",
+                                                }}
+                                            >
+                                                <div>
+                                                    <Form.Control placeholder={"Hours"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <Form.Control placeholder={"Minutes"} type="text"/>
-                        </div>
+                                                <div>
+                                                    <Form.Control placeholder={"Minutes"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <Form.Control placeholder={"Seconds"} type="text"/>
-                        </div>
-                    </div>
-                </Form.Group>{" "}
-                <br/>
-                <Form.Group controlId={"name"}>
-                    <label>End Time</label>
-                    <div
-                        style={{
-                            display: "flex",
-                            justifyContent: "space-between",
-                        }}
-                    >
-                        <div>
-                            <Form.Control placeholder={"Hours"} type="text"/>
-                        </div>
+                                                <div>
+                                                    <Form.Control placeholder={"Seconds"} type="text"/>
+                                                </div>
+                                            </div>
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <Form.Group controlId={"name"}>
+                                            <label>End Time</label>
+                                            <div
+                                                style={{
+                                                    display: "flex",
+                                                    justifyContent: "space-between",
+                                                }}
+                                            >
+                                                <div>
+                                                    <Form.Control placeholder={"Hours"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <Form.Control placeholder={"Minutes"} type="text"/>
-                        </div>
+                                                <div>
+                                                    <Form.Control placeholder={"Minutes"} type="text"/>
+                                                </div>
 
-                        <div>
-                            <Form.Control placeholder={"Seconds"} type="text"/>
-                        </div>
-                    </div>
-                </Form.Group>{" "}
-                <br/>
-                <div>
-                    <input type="checkbox" id="isLive"/>
-                    <label htmlFor="isLive"> isLive</label>
-                </div>
-                <br/>
-                <Modal.Footer>
-                    <Button type={"submit"}>Submit</Button>
-                </Modal.Footer>
-            </Form>
+                                                <div>
+                                                    <Form.Control placeholder={"Seconds"} type="text"/>
+                                                </div>
+                                            </div>
+                                        </Form.Group>{" "}
+                                        <br/>
+                                        <div>
+                                            <input type="checkbox" id="isLive"/>
+                                            <label htmlFor="isLive"> isLive</label>
+                                        </div>
+                                        <br/>
+                                        <Modal.Footer>
+                                            <Button type={"submit"}>Submit</Button>
+                                        </Modal.Footer>
+                                    </Form>
+                                </div>
+                            ) : (
+                                ""
+                            )}
+                        </Modal.Body>
+                    </Modal>
+                </div>
+
+                {/* ============= Tabs for lesson, Live Video, Assignments, Exercises, Quizes, Other Section ================= */}
+                <Nav className={"mt-5 mb-5"} fill variant="tabs" defaultActiveKey="#">
+                    <Nav.Item>
+                        <Nav.Link href="#" onClick={() => setEventKey(0)}>
+                            Content
+                        </Nav.Link>
+                    </Nav.Item>
+                    <Nav.Item>
+                        <Nav.Link eventKey="link-1" onClick={() => setEventKey(1)}>
+                            Events
+                        </Nav.Link>
+                    </Nav.Item>
+                    <Nav.Item>
+                        <Nav.Link eventKey="link-2" onClick={() => setEventKey(2)}>
+                            Assignments
+                        </Nav.Link>
+                    </Nav.Item>
+                    <Nav.Item>
+                        <Nav.Link eventKey="link-4" onClick={() => setEventKey(3)}>
+                            Quizes
+                        </Nav.Link>
+                    </Nav.Item>
+                </Nav>
+
+
+
+                {/* ============= Tabs running by conditional rendering ================= */}
+                <div className="">
+                    {
+                        eventKey === 0 ?
+                            <div>
+                            {/*Lesson Tab*/}
+                            <Card>
+                                <Card.Header>Content</Card.Header>
+                                <Card.Body>
+                                    <Card.Text>
+                                        File Link
+                                    </Card.Text>
+                                    <div>
+                                        <Button variant="primary">Edit</Button>
+                                        <Button className={"m-1"} variant="primary">Delete</Button>
+                                    </div>
+                                </Card.Body>
+                            </Card> <br/>
 
-        </>
-    )
-}
 
-export function QuizAddQuestionsModal(props) {
+                        </div> :
+                        eventKey === 1 ?
+                            <div>
+                            {/*Event Tab*/}
+                            <Card>
+                                <Card.Header>Event Title</Card.Header>
+                                <Card.Body>
+                                    <Card.Title>Description</Card.Title>
+                                    <Card.Text>
+                                        Event Date
+                                    </Card.Text>
+                                    <Button variant="primary">Go to Event</Button>
+                                </Card.Body>
+                            </Card> <br/>
 
-    return(
-        <>
+                            <Card>
+                                <Card.Header>Event Title</Card.Header>
+                                <Card.Body>
+                                    <Card.Title>Description</Card.Title>
+                                    <Card.Text>
+                                        Event Date
+                                    </Card.Text>
+                                    <div>
+                                        <Button variant="primary">Edit</Button>
+                                        <Button className={"m-1"} variant="primary">Delete</Button>
+                                    </div>
+                                </Card.Body>
+                            </Card>
 
+                        </div> :
+                        eventKey === 2 ?
+                            <div>
+                            {/*Assignments Tab*/}
+                            <Card>
+                                <Card.Header>Assignment Title</Card.Header>
+                                <Card.Body>
+                                    <Card.Title>Description</Card.Title>
+                                    <Card.Text>
+                                        File Link
+                                    </Card.Text>
+
+                                    <div>
+                                        <Button variant="primary">Go to Event</Button>
+                                        <Button className={"m-1"} variant="primary">View Submissions</Button>
+                                    </div>
+
+                                </Card.Body>
+                            </Card>
+                            <br/>
+
+                        </div> :
+                        eventKey === 3 ?
+                            <div>
+                                    {/*Quiz Tab*/}
+                                    <Card>
+                                        <Card.Header>Quiz Title</Card.Header>
+                                        <Card.Body>
+                                            <Card.Title>Description</Card.Title>
+
+                                            <div>
+                                                <Button variant="primary"
+                                                        onClick={() => {
+                                                            setIsModalAddQuestion(true);
+                                                        }}
+                                                >Add Questions</Button>
+
+                                                <Button className={"m-1"} variant={"primary"}>View Submissions</Button>
+                                            </div>
+
+                                        </Card.Body>
+                                    </Card>
+                                    <br/>
+
+          {isModalAddQuestion && (
             <Modal
-                show={props.isCheck}
-                onHide={() => props.onChange(false)}
-                dialogClassName="custom-modal"
-                size={"lg"}
-                aria-labelledby="example-custom-modal-styling-title"
-                centered
+              show={isModalAddQuestion}
+              onHide={() => setIsModalAddQuestion(false)}
+              dialogClassName="custom-modal"
+              size={"lg"}
+              aria-labelledby="example-custom-modal-styling-title"
+              centered
             >
-                <Modal.Header closeButton>
-                    <Modal.Title id="example-custom-modal-styling-title">
-                        Add Quiz
-                    </Modal.Title>
-                </Modal.Header>
-                <Modal.Body>
-                    <Form
-                        handleSubmit={(e) => {
-                            e.preventDefault();
-                        }}
-                    >
-                        <Form.Group controlId={"question"}>
-                            <Form.Label>Question</Form.Label>
-                            <Form.Control
-                                type={"text"}
-                                className={"m-2"}
-                                placeholder={"Type Question here..."}
-                            />
-                        </Form.Group>
-                        <br/>
+              <Modal.Header closeButton>
+                <Modal.Title id="example-custom-modal-styling-title">
+                  Add Quiz
+                </Modal.Title>
+              </Modal.Header>
+              <Modal.Body>
+                <Form
+                  handleSubmit={(e) => {
+                    e.preventDefault();
+                  }}
+                >
+                  <Form.Group controlId={"question"}>
+                    <Form.Label>Question</Form.Label>
+                    <Form.Control
+                      type={"text"}
+                      className={"m-2"}
+                      placeholder={"Type Question here..."}
+                    />
+                  </Form.Group>
+                  <br />
 
-                        <Form.Label>Options</Form.Label>
-                        <Form.Group controlId={"question"}>
-                            <Form.Control
-                                type={"text"}
-                                className={"m-2"}
-                                placeholder={"Option 1"}
-                            />
-                            <Form.Control
-                                type={"text"}
-                                className={"m-2"}
-                                placeholder={"Option 2"}
-                            />
-                            <Form.Control
-                                type={"text"}
-                                className={"m-2"}
-                                placeholder={"Option 3"}
-                            />
-                            <Form.Control
-                                type={"text"}
-                                className={"m-2"}
-                                placeholder={"Option 4"}
-                            />
-                        </Form.Group>
+                                                            <Form.Label>Options</Form.Label>
+                                                            <Form.Group controlId={"question"}>
+                                                                <Form.Control
+                                                                    type={"text"}
+                                                                    className={"m-2"}
+                                                                    placeholder={"Option 1"}
+                                                                />
+                                                                <Form.Control
+                                                                    type={"text"}
+                                                                    className={"m-2"}
+                                                                    placeholder={"Option 2"}
+                                                                />
+                                                                <Form.Control
+                                                                    type={"text"}
+                                                                    className={"m-2"}
+                                                                    placeholder={"Option 3"}
+                                                                />
+                                                                <Form.Control
+                                                                    type={"text"}
+                                                                    className={"m-2"}
+                                                                    placeholder={"Option 4"}
+                                                                />
+                                                            </Form.Group>
 
-                        <br/>
-                        <Form.Group controlId={"question"}>
-                            <Form.Label>Marks</Form.Label>
-                            <Form.Control
-                                type={"number"}
-                                className={"m-2"}
-                                placeholder={"Marks"}
-                            />
-                        </Form.Group>
+                                                            <br/>
+                                                            <Form.Group controlId={"question"}>
+                                                                <Form.Label>Marks</Form.Label>
+                                                                <Form.Control
+                                                                    type={"number"}
+                                                                    className={"m-2"}
+                                                                    placeholder={"Marks"}
+                                                                />
+                                                            </Form.Group>
 
-                        <div
-                            style={{display: "flex", justifyContent: "space-between"}}
-                        >
-                            <Button type={"submit"}>Submit</Button>
-                            <Button type={"submit"}>Next</Button>
-                        </div>
-                    </Form>
-                </Modal.Body>
-            </Modal>
-
-        </>
-    )
-}
-
-// ================================= Modal for Events Code Ends Here =============================================
-
-
-
-
-
-
-
-// ================================= Tabs Content Data =============================================
-
-export function ContentData() {
-
-    return(
-        <>
-
-            <Card>
-                <Card.Header>Content</Card.Header>
-                <Card.Body>
-                    <Card.Text>File Link</Card.Text>
-                    <div>
-                        <Button variant="primary">Edit</Button>
-                        <Button className={"m-1"} variant="primary">
-                            Delete
-                        </Button>
-                    </div>
-                </Card.Body>
-            </Card>{" "}
+                                                            <div
+                                                                style={{
+                                                                    display: "flex",
+                                                                    justifyContent: "space-between"
+                                                                }}
+                                                            >
+                                                                <Button type={"submit"}>Submit</Button>
+                                                                <Button type={"submit"}>Next</Button>
+                                                            </div>
+                                                        </Form>
+                                                    </Modal.Body>
+                                                </Modal>
+                                            )}
+                                        </div>
+                                        {/* =============      Tabs for lesson       ================== */}
+                        </main>
+
+                    {/*=============== End Of Main  ==================*/}
+
+                    {/*============= start of Right side*/}
+                    <div className="right">
+                        <div className="profile">
+                            <div className="info">
+                                <p>
+                                    Hey, <b>Teacher</b>
+                                </p>
+                            </div>
+
+                            <div className="profile-photo"></div>
+                        </div>
 
-        </>
-    )
-}
+                        {/*====================== Start of Recent Updates ==================== */}
+                        <div className="recent-updates">
+                            <h2>Notice Board</h2>
+                            <div className="updates">
+                                <div className="update">
+                                    <div className="profile-photo">
+                                        <h3>- UX</h3>
+                                    </div>
 
+                                    <div className="message">
+                                        <p>Assignment due 20 March</p>
+                                        <small className="text-muted">2 Minutes Ago</small>
+                                    </div>
+                                </div>
 
-export function EventData() {
+                                <div className="update">
+                                    <div className="profile-photo">
+                                        <h3>- SEO</h3>
+                                    </div>
 
-    return(
-        <>
+                                    <div className="message">
+                                        <p>Assignment due 21 March</p>
+                                        <small className="text-muted">2 Minutes Ago</small>
+                                    </div>
+                                </div>
 
-            <Card>
-                <Card.Header>Event Title</Card.Header>
-                <Card.Body>
-                    <Card.Title>Description</Card.Title>
-                    <Card.Text>Event Date</Card.Text>
-                    <Button variant="primary">Go to Event</Button>
-                </Card.Body>
-            </Card>{" "}
-            <br/>
-            <Card>
-                <Card.Header>Event Title</Card.Header>
-                <Card.Body>
-                    <Card.Title>Description</Card.Title>
-                    <Card.Text>Event Date</Card.Text>
-                    <div>
-                        <Button variant="primary">Edit</Button>
-                        <Button className={"m-1"} variant="primary">
-                            Delete
-                        </Button>
-                    </div>
-                </Card.Body>
-            </Card>
-
-        </>
-    )
-}
-
-
-export function AssignmentData() {
-
-    return(
-        <>
-
-            <Card>
-                <Card.Header>Assignment Title</Card.Header>
-                <Card.Body>
-                    <Card.Title>Description</Card.Title>
-                    <Card.Text>File Link</Card.Text>
-
-                    <div>
-                        <Button variant="primary">Go to Event</Button>
-                        <Button className={"m-1"} variant="primary">
-                            View Submissions
-                        </Button>
-                    </div>
-                </Card.Body>
-            </Card>
-            <br/>
-
-
-        </>
-    )
-}
-
-
-export function QuizData(props) {
-
-    return(
-        <>
-
-            <Card>
-                <Card.Header>Quiz Title</Card.Header>
-                <Card.Body>
-                    <Card.Title>Description</Card.Title>
-
-                    <div>
-                        <Button
-                            variant="primary"
-                            onClick={() => {
-                                props.onChange(true);
-                            }}
-                        >
-                            Add Questions
-                        </Button>
-
-                        <Button className={"m-1"} variant={"primary"}>
-                            View Submissions
-                        </Button>
+                                <div className="update">
+                                    <div className="profile-photo">
+                                        <h3>- SE</h3>
+                                    </div>
+
+                                    <div className="message">
+                                        <p>Assignment due 25 March</p>
+                                        <small className="text-muted">2 Minutes Ago</small>
+                                    </div>
+                                </div>
+                            </div>
+                        </div>
+                        {/*====================== End of Recent Updates ====================== */}
                     </div>
-                </Card.Body>
-            </Card>
-            <br/>
-
-        </>
-    )
-}
+                    {/*============= End of left Side*/}
+        </LayoutTeacher>
+);
+};
 
-
-
-
-// ================================= Tabs Content Ends Here =============================================
-
-
-
-
-
-
-
-
-
-
-
-
-
+export default Unit01;
